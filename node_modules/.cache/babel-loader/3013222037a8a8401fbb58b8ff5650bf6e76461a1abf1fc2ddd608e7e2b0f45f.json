{"ast":null,"code":"var _jsxFileName = \"/Users/badeozgule/Desktop/repo/codepen/react-drum-machine/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Display from './components/Display';\nimport Pad from './components/Pad';\nimport RadioButton from './components/RadioButton';\nimport ToggleButton from './components/ToggleButton';\nimport audioList from './data/audioList';\nimport './styles/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst padColor = [\"blue\", \"green\", \"red\", \"yellow\", \"random\"];\nconst drumType = [\"heater kit\", \"smooth piano kit\"];\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.colorSelection = type => {\n      let selectedPadColor = this.state.selectedPadColor;\n      if (type === \"random\" || selectedPadColor === \"random\") {\n        let randomNum = Math.floor(Math.random() * (padColor.length - 1));\n        this.setState({\n          selectedPadColor: padColor[randomNum],\n          selectedPadColorType: \"random\"\n        });\n      } else {\n        this.setState({\n          selectedPadColor: selectedPadColor,\n          selectedPadColorType: \"single\"\n        });\n      }\n    };\n    this.handleKeyPress = (event, index) => {\n      this.colorSelection(this.state.selectedPadColorType);\n      var colorClass = this.state.selectedPadColor + \"-pad\";\n      const selectedDrumType = audioList.filter(a => a.type === this.state.selectedDrumType);\n      const padItem = selectedDrumType.find(obj => obj.keyCode === event.keyCode);\n      if (padItem && this.state.isSystemOn === \"true\") {\n        console.log(event.type);\n        // this.refs[padItem.key].focus();\n        // this.refs[padItem.key].click();\n\n        if (this.refs[event.keyCode]) {\n          this.refs[event.keyCode].click();\n        } else {}\n        // if(event.type === \"keydown\") {\n        //   const sound = document.getElementById(padItem.key);\n        //   sound.currentTime = 0;\n        //   sound.play();\n        //   this.setState({\n        //       isPadSelected: true,\n        //       display: padItem.name\n        //     }, () => {\n        //       this.refs[padItem.key].className = \"drum-pad \" + colorClass \n        //   });\n        // }\n        // else {\n        //   this.setState({\n        //       isPadSelected: false\n        //     }, () => {\n        //       this.refs[padItem.key].className = \"drum-pad\"\n        //   });\n        // }\n      }\n    };\n    this.handleCallbackPadColor = item => {\n      if (item !== \"random\") {\n        this.setState({\n          selectedPadColorType: \"single\",\n          selectedPadColor: item\n        });\n      } else {\n        this.setState({\n          selectedPadColorType: \"random\",\n          selectedPadColor: item\n        });\n      }\n    };\n    this.handleCallbackDrumType = item => {\n      this.setState({\n        selectedDrumType: item,\n        display: item\n      });\n    };\n    this.handleCallbackShowTitles = item => {\n      this.setState({\n        isDrumTitlesOn: item\n      });\n    };\n    this.handleCallbackShowKeys = item => {\n      this.setState({\n        isKeysOn: item\n      });\n    };\n    this.handleCallbackTurnOnOff = item => {\n      this.setState({\n        isSystemOn: item\n      }, () => {\n        this.state.isSystemOn === \"false\" ? document.getElementById(\"drum-machine\").classList.add(\"disabled\") : document.getElementById(\"drum-machine\").classList.remove(\"disabled\");\n      });\n    };\n    this.handleVolumeChange = event => {\n      this.setState({\n        volumeValue: event.target.value\n      });\n    };\n    this.state = {\n      showKeys: true,\n      showTitles: false,\n      drumOn: true,\n      selectedPadColorType: \"single\",\n      //\"single - random\"\n      selectedButtonPadColor: \"blue\",\n      selectedPadColor: \"blue\",\n      selectedDrumType: \"heater kit\",\n      display: \"heater kit\",\n      isPadSelected: false,\n      isSystemOn: \"true\",\n      isKeysOn: \"true\",\n      isDrumTitlesOn: \"false\",\n      volumeValue: 80\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n\n    // this.refs = audioList.map(() => React.createRef());\n    this.refs = {};\n  }\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n    document.addEventListener(\"dragstart drop\", function (e) {\n      e.preventDefault();\n    }, false);\n    document.getElementsByClassName(\"left-side\")[0].addEventListener('contextmenu', function (e) {\n      e.preventDefault();\n    }, false);\n    for (let e of document.querySelectorAll('input[type=\"range\"].slider-progress')) {\n      e.style.setProperty('--value', e.value);\n      e.style.setProperty('--min', e.min == '' ? '0' : e.min);\n      e.style.setProperty('--max', e.max == '' ? '100' : e.max);\n      e.addEventListener('input', () => e.style.setProperty('--value', e.value));\n    }\n  }\n  componentWillMount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n  }\n  handleClick(event, key) {\n    this.colorSelection(this.state.selectedPadColorType);\n    var colorClass = this.state.selectedPadColor + \"-pad\";\n    console.log(\"event target\", event.target);\n    console.log(\"classname\", event.target.id);\n    console.log('key index: ', key);\n    console.log(event.type);\n    const selectedDrumType = audioList.filter(a => a.type === this.state.selectedDrumType);\n    const padItem = selectedDrumType.find((obj, i) => i === key % 9);\n    if (padItem && this.state.isSystemOn === \"true\") {\n      event.target.focus();\n      event.target.click();\n      if (event.type === \"mousedown\") {\n        const sound = document.getElementById(padItem.key);\n        sound.currentTime = 0;\n        sound.play();\n        this.setState({\n          isPadSelected: true,\n          display: event.target.name\n        }, () => {\n          event.target.className = \"drum-pad \" + colorClass;\n        });\n      } else if (event.type === \"mouseup\") {\n        this.setState({\n          isPadSelected: false\n        }, () => {\n          event.target.className = \"drum-pad\";\n        });\n      }\n    }\n  }\n  render() {\n    const clips = [].slice.call(document.getElementsByClassName('clip'));\n    clips.forEach(sound => {\n      sound.volume = this.state.volumeValue / 100;\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: [\"DRUM \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"by badeozgule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 22\n          }, this), \" MACHINE\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pad-container\",\n          children: audioList.map((pad, index) => this.state.selectedDrumType === pad.type ? /*#__PURE__*/_jsxDEV(Pad, {\n            selectedPadColor: this.state.selectedPadColor,\n            isActive: this.state.isPadSelected,\n            isDrumTitlesOn: this.state.isDrumTitlesOn,\n            isKeysOn: this.state.isKeysOn,\n            index: index,\n            id: index,\n            letterKey: pad.key,\n            handleClick: this.handleClick,\n            handleKeyPress: this.handleKeyPress,\n            padName: pad.name,\n            innerRef: pad.key,\n            url: pad.url\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this) : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-controller\",\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            title: \"Turn\",\n            name: \"turn\",\n            isButtonActive: this.state.isSystemOn,\n            parentCallback: this.handleCallbackTurnOnOff\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            displayTitle: this.state.display\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"v-line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-side\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-line hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          sectionTitle: \"Drum Type\",\n          btnName: \"type\",\n          btnItems: drumType,\n          selectedItem: this.state.selectedDrumType,\n          parentCallback: this.handleCallbackDrumType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n          sectionTitle: \"Pad Color\",\n          btnName: \"color\",\n          btnItems: padColor,\n          selectedItem: this.state.selectedPadColor,\n          selectedItemType: this.state.selectedPadColorType,\n          parentCallback: this.handleCallbackPadColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            title: \"Show Keys\",\n            name: \"keys\",\n            isButtonActive: this.state.isKeysOn,\n            parentCallback: this.handleCallbackShowKeys\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            title: \"Show Drum Titles\",\n            name: \"titles\",\n            isButtonActive: this.state.isDrumTitlesOn,\n            parentCallback: this.handleCallbackShowTitles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"volume\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Volume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"volume_val\",\n                children: [this.state.volumeValue, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"styled-slider slider-progress\",\n              type: \"range\",\n              min: \"0\",\n              max: \"100\",\n              step: \"1\",\n              value: this.state.volumeValue,\n              onChange: this.handleVolumeChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","ReactDOM","Display","Pad","RadioButton","ToggleButton","audioList","jsxDEV","_jsxDEV","Fragment","_Fragment","padColor","drumType","App","Component","constructor","props","colorSelection","type","selectedPadColor","state","randomNum","Math","floor","random","length","setState","selectedPadColorType","handleKeyPress","event","index","colorClass","selectedDrumType","filter","a","padItem","find","obj","keyCode","isSystemOn","console","log","refs","click","handleCallbackPadColor","item","handleCallbackDrumType","display","handleCallbackShowTitles","isDrumTitlesOn","handleCallbackShowKeys","isKeysOn","handleCallbackTurnOnOff","document","getElementById","classList","add","remove","handleVolumeChange","volumeValue","target","value","showKeys","showTitles","drumOn","selectedButtonPadColor","isPadSelected","handleClick","bind","componentDidMount","addEventListener","e","preventDefault","getElementsByClassName","querySelectorAll","style","setProperty","min","max","componentWillMount","removeEventListener","key","id","i","focus","sound","currentTime","play","name","className","render","clips","slice","call","forEach","volume","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pad","isActive","letterKey","padName","innerRef","url","title","isButtonActive","parentCallback","displayTitle","sectionTitle","btnName","btnItems","selectedItem","selectedItemType","step","onChange"],"sources":["/Users/badeozgule/Desktop/repo/codepen/react-drum-machine/src/App.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Display from './components/Display';\nimport Pad from './components/Pad';\nimport RadioButton from './components/RadioButton';\nimport ToggleButton from './components/ToggleButton';\nimport audioList from './data/audioList';\nimport './styles/main.css';\n\n\nconst padColor = [\"blue\",\"green\",\"red\",\"yellow\", \"random\"];\nconst drumType = [\"heater kit\", \"smooth piano kit\"];\n\n\nexport class App extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      showKeys: true,\n      showTitles: false,\n      drumOn: true,\n      selectedPadColorType: \"single\", //\"single - random\"\n      selectedButtonPadColor: \"blue\",\n      selectedPadColor: \"blue\",\n      selectedDrumType: \"heater kit\",\n      display: \"heater kit\",\n      isPadSelected: false,\n      isSystemOn: \"true\",\n      isKeysOn: \"true\",\n      isDrumTitlesOn: \"false\",\n      volumeValue: 80,\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n\n    // this.refs = audioList.map(() => React.createRef());\n    this.refs = {};  \n    \n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n    document.addEventListener(\"dragstart drop\", function (e) { e.preventDefault(); }, false);\n    document.getElementsByClassName(\"left-side\")[0].addEventListener('contextmenu', function (e) { e.preventDefault(); }, false);\n    for (let e of document.querySelectorAll('input[type=\"range\"].slider-progress')) {\n      e.style.setProperty('--value', e.value);\n      e.style.setProperty('--min', e.min == '' ? '0' : e.min);\n      e.style.setProperty('--max', e.max == '' ? '100' : e.max);\n      e.addEventListener('input', () => e.style.setProperty('--value', e.value));\n    }\n  }\n  \n  componentWillMount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n  }\n  \n  \n  colorSelection = (type) => {\n    let selectedPadColor = this.state.selectedPadColor;\n    if (type === \"random\" || selectedPadColor === \"random\") {\n      let randomNum =  Math.floor(Math.random() * (padColor.length - 1));\n      this.setState({\n        selectedPadColor: padColor[randomNum],\n        selectedPadColorType: \"random\"\n      });\n    }\n    else {\n      this.setState({\n        selectedPadColor: selectedPadColor,\n        selectedPadColorType: \"single\"\n      });\n    }\n  }\n  \n  \n  handleClick(event, key) {\n    this.colorSelection(this.state.selectedPadColorType);\n    var colorClass = this.state.selectedPadColor + \"-pad\";\n    console.log(\"event target\", event.target);\n    console.log(\"classname\",event.target.id);\n    console.log('key index: ', key);\n    console.log(event.type);\n    const selectedDrumType = audioList.filter(a => a.type === this.state.selectedDrumType);\n    const padItem = selectedDrumType.find((obj, i) => i === key % 9);\n    if (padItem && this.state.isSystemOn === \"true\") {\n      event.target.focus();\n      event.target.click();\n      if(event.type === \"mousedown\") {\n        const sound = document.getElementById(padItem.key);\n        sound.currentTime = 0;\n        sound.play();\n        this.setState({\n          isPadSelected: true,\n          display: event.target.name\n        }, () => {\n          event.target.className = \"drum-pad \" + colorClass\n        });\n      }\n      else if(event.type === \"mouseup\") {\n        this.setState({\n          isPadSelected: false\n        }, () => {\n          event.target.className = \"drum-pad\"\n        });\n      }\n    }\n    \n  }\n  \n  \n  handleKeyPress = (event, index) => {\n    this.colorSelection(this.state.selectedPadColorType);\n    var colorClass = this.state.selectedPadColor + \"-pad\";\n    const selectedDrumType = audioList.filter(a => a.type === this.state.selectedDrumType);\n    const padItem = selectedDrumType.find(obj => obj.keyCode === event.keyCode);\n    if (padItem && this.state.isSystemOn === \"true\") {\n      console.log(event.type);\n      // this.refs[padItem.key].focus();\n      // this.refs[padItem.key].click();\n\n      if (this.refs[event.keyCode]) {\n        this.refs[event.keyCode].click();\n      } else {\n\n      }\n      // if(event.type === \"keydown\") {\n      //   const sound = document.getElementById(padItem.key);\n      //   sound.currentTime = 0;\n      //   sound.play();\n      //   this.setState({\n      //       isPadSelected: true,\n      //       display: padItem.name\n      //     }, () => {\n      //       this.refs[padItem.key].className = \"drum-pad \" + colorClass \n      //   });\n      // }\n      // else {\n      //   this.setState({\n      //       isPadSelected: false\n      //     }, () => {\n      //       this.refs[padItem.key].className = \"drum-pad\"\n      //   });\n      // }\n    }\n  }\n  \n  \n  handleCallbackPadColor = (item) => {\n    if (item !== \"random\") {\n      this.setState({\n        selectedPadColorType: \"single\",\n        selectedPadColor: item,\n      });    \n    } else {\n       this.setState({\n         selectedPadColorType: \"random\",\n         selectedPadColor: item,\n       });    \n    }\n     \n  }\n  \n  handleCallbackDrumType = (item) => {\n    this.setState({\n      selectedDrumType: item,\n      display: item,\n    });\n  }\n  \n  handleCallbackShowTitles = (item) => {\n    this.setState({\n      isDrumTitlesOn: item\n    });\n  }\n  handleCallbackShowKeys = (item) => {\n    this.setState({\n      isKeysOn: item\n    });\n  }\n  handleCallbackTurnOnOff = (item) => {\n    this.setState({\n      isSystemOn: item\n    }, () => {\n      this.state.isSystemOn === \"false\" ? \n        document.getElementById(\"drum-machine\").classList.add(\"disabled\")\n      :\n        document.getElementById(\"drum-machine\").classList.remove(\"disabled\")\n    });\n  }\n\n\n  handleVolumeChange = (event) => {\n    this.setState({volumeValue: event.target.value});\n  }\n\n  render(){\n    const clips = [].slice.call(document.getElementsByClassName('clip'));\n    clips.forEach(sound => {\n      sound.volume = this.state.volumeValue / 100;\n    });\n\n    return(\n      <>\n      \n        <h1><em>DRUM <span>by badeozgule</span> MACHINE</em></h1>\n        \n        <div className=\"left-side\">\n          <div className=\"pad-container\">\n            {audioList.map((pad, index) => (\n              this.state.selectedDrumType === pad.type ?\n              <Pad\n                selectedPadColor={this.state.selectedPadColor}\n                isActive={this.state.isPadSelected}\n                isDrumTitlesOn={this.state.isDrumTitlesOn}\n                isKeysOn={this.state.isKeysOn}\n                index={index}\n                key={index}\n                id={index}\n                letterKey={pad.key}\n                handleClick={this.handleClick}\n                handleKeyPress={this.handleKeyPress}\n                padName={pad.name}\n                innerRef={pad.key}\n                url={pad.url}\n                />\n              :\n              null\n            ))}\n            \n          </div>\n          <div className=\"bottom-controller\">\n            <ToggleButton\n              title=\"Turn\"\n              name=\"turn\"\n              isButtonActive={this.state.isSystemOn}\n              parentCallback={this.handleCallbackTurnOnOff}\n            />\n            <Display displayTitle={this.state.display}/>\n          </div>\n        </div>\n        <div className=\"v-line\"/>\n        <div className=\"right-side\">\n          \n          <div className=\"h-line hidden\"/>\n          <RadioButton \n            sectionTitle=\"Drum Type\"\n            btnName=\"type\"\n            btnItems={drumType}\n            selectedItem={this.state.selectedDrumType} \n            parentCallback={this.handleCallbackDrumType}/>\n          <div className=\"h-line\"/>\n\n          <RadioButton \n            sectionTitle=\"Pad Color\"\n            btnName=\"color\"\n            btnItems={padColor}\n            selectedItem={this.state.selectedPadColor}\n            selectedItemType={this.state.selectedPadColorType}\n            parentCallback={this.handleCallbackPadColor}/>\n          <div className=\"h-line\"/>\n          <div>\n            <ToggleButton\n              title=\"Show Keys\"\n              name=\"keys\"\n              isButtonActive={this.state.isKeysOn}\n              parentCallback={this.handleCallbackShowKeys}\n            />\n            <ToggleButton\n              title=\"Show Drum Titles\"\n              name=\"titles\"\n              isButtonActive={this.state.isDrumTitlesOn}\n              parentCallback={this.handleCallbackShowTitles}\n            />\n          </div>\n          <div className=\"h-line\"/>\n          <div>\n            <div className=\"volume\">\n              <div>\n                <span>Volume</span>\n                <span id=\"volume_val\">{this.state.volumeValue}%</span>\n              </div>\n              <input \n                className=\"styled-slider slider-progress\" \n                type=\"range\" \n                min=\"0\"\n                max=\"100\" \n                step=\"1\"\n                value={this.state.volumeValue} \n                onChange={this.handleVolumeChange}\n                />\n            </div>\n          </div>\n        </div>    \n      </>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}